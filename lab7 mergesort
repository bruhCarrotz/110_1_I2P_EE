
#include <stdio.h>
#include <stdlib.h>

int min(int a, int b){
   return (a<b) ? a : b ;
}

void merge(int a[], int size1, int size2) {
 int i = 0, j = 0, k = 0;
 int total_size = size1 + size2;
 int *b = a + size1;
 int *result;
 
 result = (int *)malloc(sizeof(int) * total_size);

 while (i < size1 && j < size2)  
  if (a[i] <= b[j])
   result[k++] = a[i++]; 
  else
   result[k++] = b[j++]; 

 while (i < size1)
  result[k++] = a[i++];
 while (j < size2)
  result[k++] = b[j++];

 for (i = 0; i < total_size; i++)
  a[i] = result[i];

 free(result);
}

void merge_sort(int arr[], int n) {
 int current;
 int left_start;

 for (current = 1; current <= n-1; current=2*current) {
  for (left_start=0; left_start<n-1; left_start+=2*current) {
    int mid = min(left_start + current - 1, n - 1);
    int right_end = min(left_start + 2 *current- 1, n - 1);
    merge(arr + left_start, mid - left_start +1, right_end - mid);
  }
 }
}

int main() {
 int *a, size;

 scanf("%d", &size);
 a = (int *)malloc(sizeof(int) * size);
 for (int i = 0; i < size; i++) {
  scanf("%d", a + i);
 }

 merge_sort(a, size);

 for (int i = 0; i < size - 1; i++)
  printf("%d ", a[i]);

 printf("%d\n", a[size - 1]);

 free(a);
 return 0;
}
